alert('#3 ‚Äì –§–ª–∞–≥–∏');

// const reg = /./;
// const str = 'a\nb';


// var result = str.match(reg);
// console.log(result);


// const reg = /./g;
// const str1 = 'ololo\nbob'
// var result = str1.match(reg);
// console.log(result);


// const regul = new RegExp('—à–∞–±–ª–æ–Ω', '—Ñ–ª–∞–≥–∏');

//_____________________________________________________________________________

// const reg = /–∫–æ—Ç/i;
// const str = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.'

// const result = str.match(reg);
// console.log(result);

//_____________________________________________________________________________

// const reg = /–∫–æ—Ç/gi;
// // g —ç—Ç–æ –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
// const str = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.'

// // const result = str.matchAll(reg);
// const result = Array.from(str.match(reg));
// const result2 = Array.from(str.matchAll(reg)); // –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—É—é –∏–Ω—Ñ–æ
// console.log(result);
// console.log(result2);

//_____________________________________________________________________________

// const regexp = /–∫–æ—Ç/gi;
// const str = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.';

// let result = [];
// var currentResult = null;

// // –≤—ã–∑—ã–≤–∞–µ—Ç—å—Å—è –º–µ—Ç–æ–¥ —É –†–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ –Ω—É—Ç—ã—Ä—å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—å—Å—è —Å—Ç—Ä–æ–∫–∞ regexp.exec(str)
// // –∏ –ï–°–õ–ò –µ—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—å—Å—è —á—Ç–æ —Ç–æ —á—Ç–æ –Ω–µ —è–≤–ª—è–µ—Ç—å—Å—è –õ–û–ñ–¨–Æ, —Ç–æ–µ—Å—Ç—å –≤—Å–µ –∫—Ä–æ–º–µ null, —Ç–æ —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—å—Å—è
// // –ø—Ä–∏—á–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π currentResult –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç


// while (currentResult = regexp.exec(str)) {
//     result = [...result, currentResult];
//     // –∏ –Ω–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ 
//     // ...result –±–µ—Ä–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
//     // –∏ –∫–ª–∞–¥–µ–º –Ω–æ–≤—ã–µ currentResult


//     // result.push(currentResult);
// }

// console.log(result);

//____________________________


//____________________________


// const regexp = /–∫–æ—Ç/gi;
// const str = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.';

// let result = regexp.exec(str);
// console.log(result, regexp.lastIndex);

// result = regexp.exec(str);
// console.log(result, regexp.lastIndex);

// result = regexp.exec(str);
// console.log(result, regexp.lastIndex);

// result = regexp.exec(str);
// console.log(result, regexp.lastIndex);


//_____________________________________________________________________

// const regexp = /–∫–æ—Ç/gi;
// const str = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.';

// var result = Array.from(str.matchAll(regexp));
// console.log(result);

// //_____________________________________________________________________

// const regexp2 = /–∫–æ—Ç/gi;
// const str2 = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.';

// var result2 = str2.match(regexp2);
// console.log(result2);

// //_____________________________________________________________________

// const regexp3 = /–∫–æ—Ç/;
// const str3 = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.';

// var result3 = str3.match(regexp3);
// console.log(result3);

// var result3 = str3.match(regexp3);
// console.log(result3);




//_________________________________________________________________________

// const regexp4 = /–∫–æ—Ç/gi;
// const str4 = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.';

// var result4 = Array.from(str4.matchAll(regexp4));
// console.log(result4);

// //_________________________________________________________________________

// const regexp5 = /–∫–æ—Ç/gi;
// const str5 = '–ö–æ—Ç —Ç–µ—Ä—Ä–∞–∫–æ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫—É—à–∞–µ—Ç –∫–æ—Ç–ª–µ—Ç—É.';

// var result5 = [];
// var currentResult = null;

// while(currentResult = regexp5.exec(str5)) {
//     // result5.push(currentResult);
//     result5 = [...result5, currentResult];
// }

// console.log(result5);

//_________________________________________________________________________________________________________

// var str = '';

// for(var i = 1; i <= 10; i += 1) {
//     str += (i === 2 || i === 8) ? 'a' : 'b';
// }

// console.log(str);


// let str2 = '';

// for(let i = 0; i < 10000000; i += 1) {
//     str2 += (i === 1000 || i === 2000) ? 'b' : 'a';
// }


// var regexp = /b/g;
// var t0 = performance.now();
// var result1 = regexp.exec(str2);
// var result2 = regexp.exec(str2);
// var result3 = regexp.exec(str2);
// var t1 = performance.now();
// // console.log(t1 - t0);
// // console.log(result1);
// // console.log(result2);
// // console.log(result3);


// regexp = /b/y;
// t0 = performance.now();
// result1 = regexp.exec(str2);
// result2 = regexp.exec(str2);
// result3 = regexp.exec(str2);
// t1 = performance.now();
// // console.log(t1 - t0);
// // console.log(result1);
// // console.log(result2);
// // console.log(result3);



// regexp = /b/g;
// t0 = performance.now();
// regexp.lastIndex = 1000;
// result1 = regexp.exec(str2);
// regexp.lastIndex = 2000;
// result2 = regexp.exec(str2);
// result3 = regexp.exec(str2);
// t1 = performance.now();
// // console.log(t1 - t0);
// // console.log(result1);
// // console.log(result2);
// // console.log(result3);


// regexp = /b/y;
// t0 = performance.now();
// regexp.lastIndex = 1000;
// result1 = regexp.exec(str2);
// regexp.lastIndex = 2000;
// result2 = regexp.exec(str2);
// result3 = regexp.exec(str2);
// t1 = performance.now();
// console.log(t1 - t0);
// console.log(result1);
// console.log(result2);
// console.log(result3);

//__________________________________________________________________________________

console.log('üòÑ'.length);
console.log('ùí≥'.length);


